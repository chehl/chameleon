plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.flywaydb.flyway" version "10.11.0"
    id 'io.freefair.lombok' version '8.6'
    id 'jacoco'
    id 'org.owasp.dependencycheck' version '8.4.3'
    id 'com.adarshr.test-logger' version '4.0.0' // optional, creates pretty output of unit tests (during `gradle test`)
    id 'org.sonarqube' version '5.0.0.4638'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'cde.chameleon.ChameleonApplication'
    }
}

group = 'cde.chameleon'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

sourceSets {
    intTest {
        compileClasspath += sourceSets.main.output + sourceSets.test.output
        runtimeClasspath += sourceSets.main.output + sourceSets.test.output
    }
}

configurations {
    intTestImplementation.extendsFrom testImplementation
    intTestCompile.extendsFrom testCompile
    intTestRuntime.extendsFrom testRuntime
    intTestRuntimeOnly.extendsFrom testRuntimeOnly
    cucumberRuntime.extendsFrom intTestImplementation
}

dependencies {
    // starters
    implementation 'org.springframework.boot:spring-boot-starter-web:3.2.4'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.2.4'
    implementation 'org.springframework.boot:spring-boot-starter-security:3.2.4'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server:3.2.4'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.2.4'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.2.4'

    // prod dependencies
    implementation 'org.postgresql:postgresql:42.7.3'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
    implementation 'org.modelmapper:modelmapper:3.2.0'
    implementation 'org.flywaydb:flyway-core:10.11.0'
    implementation 'org.flywaydb:flyway-database-postgresql:10.11.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.0'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
    implementation 'org.apache.commons:commons-lang3:3.14.0'
    implementation 'commons-codec:commons-codec:1.16.1'
    implementation 'io.micrometer:micrometer-registry-prometheus:1.12.5'
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    // dev tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools:3.2.4'

    // test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.2.4'
    testImplementation 'com.google.truth:truth:1.4.2'
    testImplementation 'org.mockito:mockito-core:5.11.0'
    testImplementation 'net.bytebuddy:byte-buddy:1.14.13' // required by mockito
    testImplementation 'com.tngtech.archunit:archunit-junit5:1.2.1'
    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'

    // integration test dependencies
    intTestImplementation 'io.cucumber:cucumber-java:7.16.1'
    intTestImplementation 'io.cucumber:cucumber-spring:7.16.1'
    intTestImplementation 'org.keycloak:keycloak-authz-client:24.0.2'
    intTestImplementation 'net.masterthought:cucumber-reporting:5.8.0'
    intTestCompileOnly 'org.projectlombok:lombok:1.18.32'
    intTestAnnotationProcessor 'org.projectlombok:lombok:1.18.32'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test

    reports {
        xml.required = true
    }

    // exclude spring configuration classes from unit test coverage
    afterEvaluate {
        getClassDirectories().setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['cde/chameleon/ChameleonApplication.class', 'cde/chameleon/config/**'])
        }))
    }
}

// see: https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
    cveValidForHours = 10
    format = 'ALL'
    suppressionFile = 'src/test/resources/owasp-dependency-check.xml'
    outputDirectory = project.layout.buildDirectory.get().asFile.absolutePath + '/reports/owasp'
    if (System.properties.containsKey('dataDirectory')) {
        data {
            directory = project.projectDir.absolutePath + '/' + System.properties.get('dataDirectory')
        }
    }
}

tasks.register('intTest') {
    group = 'build'
    dependsOn assemble, intTestClasses
    doLast {
        javaexec {
            mainClass = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime
            classpath += sourceSets.main.output + sourceSets.test.output + sourceSets.intTest.output
            args = [
                    '--plugin', 'pretty',
                    '--glue', 'cde.chameleon', 'src/intTest/resources',
                    '--plugin', 'html:build/reports/cucumber/index.html',
                    '--plugin', 'json:build/reports/cucumber/cucumber.json',
                    '--plugin', 'junit:build/reports/cucumber/cucumber.xml'
            ]
        }
    }
}