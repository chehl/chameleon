name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
    paths-ignore:
      - '**.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE.txt'
      - '**.md'
      - '**.adoc'
      - '**.txt'
      - '.all-contributorsrc'
  pull_request:
    paths-ignore:
      - '**.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE.txt'
      - '**.md'
      - '**.adoc'
      - '**.txt'
      - '.all-contributorsrc'

concurrency:
  group: "workflow = ${{ github.workflow }}, ref = ${{ github.event.ref }}, pr = ${{ github.event.pull_request.id }}"
  cancel-in-progress: ${{ github.event_name == 'pull_request' || github.repository != 'chehl/chameleon' }}

permissions:
  checks: write

jobs:
  populate-cache:
    runs-on: ubuntu-latest

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'gradle'
        id: setup

      - name: Populate Cache
        if: ${{ steps.setup.outputs.cache-hit != 'true' }}
        run: |
          ./gradlew --no-daemon build dependencyCheckUpdate

      - name: Cancel Build
        if: ${{ failure() }}
        uses: andymckay/cancel-action@0.3

  build-and-test:
    runs-on: ubuntu-latest

    needs:
      - populate-cache

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'gradle'

      - name: Build and Test
        run: ./gradlew --no-daemon build

      - name: JUnit Test Report
        uses: dorny/test-reporter@v1
        if: ${{ always() }}
        with:
          name: JUnit Test Report
          path: '**/build/test-results/test/TEST*.xml'
          reporter: java-junit

      - name: Upload Test Report
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: test-report
          path: '**/build/test-results/test/*.xml'
          if-no-files-found: error
          retention-days: 2

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: code-coverage-report
          path: '**/build/reports/jacoco/test/*.xml'
          if-no-files-found: error
          retention-days: 2

      - name: Upload JARs
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: jars
          path: '**/build/libs/*.jar'
          if-no-files-found: error
          retention-days: 2

      - name: Cancel Build
        if: ${{ failure() }}
        uses: andymckay/cancel-action@0.3

  sonar:
    runs-on: ubuntu-latest

    needs:
      - build-and-test

    steps:
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download Coverage Report
        uses: actions/download-artifact@v3
        with:
          name: code-coverage-report

      - name: Set up JDK 17

        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'gradle'

      - name: Sonar Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew \
            --no-daemon \
            -Dsonar.sourceEncoding=UTF-8 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.organization=chehl \
            -Dsonar.projectKey=chehl_chameleon \
            -Dsonar.login=${SONAR_TOKEN} \
            sonar

      - name: Cancel Build
        if: ${{ failure() }}
        uses: andymckay/cancel-action@0.3

  owasp:
    runs-on: ubuntu-latest

    needs:
      - populate-cache

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'gradle'

      - name: OWASP CVE Check
        run: ./gradlew --no-daemon dependencyCheckAnalyze

      - name: OWASP Report
        uses: dorny/test-reporter@v1
        if: ${{ always() }}
        with:
          name: OWASP Report
          path: '**/build/reports/owasp/*-junit.xml'
          reporter: java-junit

      - name: Upload OWASP Report
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: owasp-report
          path: '**/build/reports/owasp/*-junit.xml'
          if-no-files-found: error
          retention-days: 2

      - name: Cancel Build
        if: ${{ failure() }}
        uses: andymckay/cancel-action@0.3

  integration-tests:
    runs-on: ubuntu-latest

    needs:
      - sonar
      - owasp

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'gradle'

      - name: Download JARs
        uses: actions/download-artifact@v3
        with:
          name: jars

      - name: Start docker-compose Environment and Run Integration Tests
        run: |
          function wait_for() {
            [ -n "${1}" ] || return 1
            local host="${1}"
            local service_name="${2:-${host}}"
            local expected_code="${3:-200}"
            local counter=0
            printf "Waiting for %s to become ready" "${service_name}"
            while [[ "$(curl -s -o /dev/null -w "%{http_code}" "${host}")" != "${expected_code}" ]]
            do
              (( counter = counter + 1 ))
              printf "."
              if [[ "${counter}" -ge 12 ]]
              then
                printf "Waited for 1 minute, %s did not become ready. Exiting.\n" "${service_name}"
                return 1
              fi
              sleep 5
            done
            printf "OK\n"
          }
          
          function stop_docker() {
            echo "Stopping docker-compose environment"
            docker compose -f localdeployment/docker-compose.yml down
          }
          
          function start_docker() {
            echo "Starting docker-compose environment"
            local error_code=0
            docker compose -f localdeployment/docker-compose.yml up -d || error_code="${?}"
            if [[ "${error_code}" -ne 0 ]]
            then
              echo "command [docker-compose ... up ...] returned non-zero exit code ${error_code}. Exiting."
              exit "${error_code}"
            fi
            error_code=0
            wait_for "http://localhost:4444/auth/health/ready" "keycloak" || error_code="${?}"
            if [[ "${error_code}" -ne 0 ]]
            then
              stop_docker
              return "${error_code}"
            fi
          }
          
          function start_chameleon() {
            echo "Starting Chameleon"
            mkdir -p logs
            java -jar build/libs/chameleon-0.0.1-SNAPSHOT.jar 1>logs/log.txt 2>logs/error.txt &
            return "${!}"
          }
          
          function run_integration_tests() {
            start_chameleon
            local jar_pid=${?}
            local return_code=0
            wait_for "localhost:8080/actuator/health/readiness" "Chameleon" || return_code="${?}"
          
            if [[ "${return_code}" -eq 0 ]]
            then
              ./gradlew --no-daemon intTest || return_code="${?}"
          
              echo "Stopping Chameleon"
              kill "${jar_pid}"
            fi
            return "${return_code}"
          }
          
          start_docker || exit "${?}"
          return_code=0
          run_integration_tests || return_code="${?}"
          stop_docker || true
          exit "${return_code}"

      - name: Integration Test Report
        uses: dorny/test-reporter@v1
        if: ${{ always() }}
        with:
          name: Integration Test Report
          path: '**/build/reports/cucumber/cucumber.xml'
          reporter: java-junit

      - name: Upload Integration Test App Logs
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: int-test-app-logs
          path: 'logs/*'
          if-no-files-found: error
          retention-days: 2

      - name: Upload Integration Test Report
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: int-test-report
          path: '**/build/reports/cucumber/cucumber.xml'
          if-no-files-found: error
          retention-days: 2