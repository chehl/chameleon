name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
    paths-ignore:
      - '**.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE.txt'
      - '**.md'
      - '**.adoc'
      - '**.txt'
      - '.all-contributorsrc'
      - 'localdeployment/docker-compose.yml'
  pull_request:
    paths-ignore:
      - '**.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE.txt'
      - '**.md'
      - '**.adoc'
      - '**.txt'
      - '.all-contributorsrc'
      - 'localdeployment/docker-compose.yml'

concurrency:
  group: "workflow = ${{ github.workflow }}, ref = ${{ github.event.ref }}, pr = ${{ github.event.pull_request.id }}"
  cancel-in-progress: ${{ github.event_name == 'pull_request' || github.repository != 'chehl/chameleon' }}

permissions:
  actions: write
  checks: write
  pull-requests: write

jobs:
  recreate-comment:
    runs-on: ubuntu-latest

    steps:
      - name: Publish Report
        uses: turing85/publish-report@v2
        with:
          checkout: 'true'
          recreate-comment: true

  populate-cache:
    runs-on: ubuntu-latest

    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Populate cache
        uses: ./.github/actions/populate-cache

  build-and-test:
    runs-on: ubuntu-latest

    needs:
      - recreate-comment
      - populate-cache

    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'gradle'

      - name: Build and Test
        run: ./gradlew --no-daemon build

      - name: Upload Classes
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: classes
          path: '**/build/classes/**/*.class'
          if-no-files-found: error
          retention-days: 2

      - name: Upload Test Report
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: unit-test-report
          path: '**/build/test-results/test/*.xml'
          if-no-files-found: error
          retention-days: 2

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: code-coverage-report
          path: '**/build/reports/jacoco/test/*.xml'
          if-no-files-found: error
          retention-days: 2

      - name: Upload JARs
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: jars
          path: '**/build/libs/*.jar'
          if-no-files-found: error
          retention-days: 2

      - name: Publish Report
        if: ${{ always() }}
        uses: turing85/publish-report@v2
        with:
          report-name: JUnit Test
          report-path: '**/build/test-results/test/TEST*.xml'

  sonar:
    runs-on: ubuntu-latest

    needs:
      - build-and-test

    steps:
      - name: Git checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download classes
        uses: actions/download-artifact@v4
        with:
          name: classes

      - name: Download Coverage Report
        uses: actions/download-artifact@v4
        with:
          name: code-coverage-report

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'gradle'

      - name: Sonar Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./gradlew \
            --no-daemon \
            --system-prop sonar.sourceEncoding=UTF-8 \
            --system-prop sonar.host.url=https://sonarcloud.io \
            --system-prop sonar.organization=chehl \
            --system-prop sonar.projectKey=chehl_chameleon \
            --system-prop sonar.token=${SONAR_TOKEN} \
            sonar

  owasp:
    runs-on: ubuntu-latest

    needs:
      - recreate-comment
      - populate-cache

    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: OWASP Dependency check
        uses: ./.github/actions/owasp
        with:
          nvd-api-key: ${{ secrets.NVD_API_KEY }}

  integration-tests:
    runs-on: ubuntu-latest

    needs:
      - build-and-test

    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Integration Test
        uses: ./.github/actions/integration-test
        with:
          download-jars: 'true'